name: build and release
on: release
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: prerequisite
      run: sudo apt-get install -y libkrb5-dev
    - name: submodule
      run: git submodule update --init --recursive
    - name: make
      run: make
    - name: release
      run: |
        set THIS_GITHUB_EVENT=$(cat $GITHUB_EVENT_PATH)
        set RELEASE_UPLOAD_URL=$(echo $THIS_GITHUB_EVENT | jq -r .release.upload_url)
        set RELEASE_UPLOAD_URL=${RELEASE_UPLOAD_URL/\{?name,label\}/}
        set RELEASE_TAG_NAME=$(echo $THIS_GITHUB_EVENT | jq -r .release.tag_name)
        set PROJECT_NAME=$(basename $GITHUB_REPOSITORY)
        NAME="adbc_driver_netezza.tgz"
        curl \
          --tlsv1.2 \
          -X POST \
          --data-binary WithMakeBuild/adbc_driver_netezza.tgz \
          -H 'Content-Type: application/octet-stream' \
          -H "Authorization: Bearer ${GITHUB_TOKEN}" \
          "${RELEASE_UPLOAD_URL}?name=${NAME}"

  build-python:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job

    steps:
      - uses: actions/checkout@v4

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: src/python/dist/

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # Only run this when a tag is pushed (i.e., a release)
    needs:
      - build-python  # This job depends on the 'build-python' job
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      id-token: write  # Required to authenticate with GitHub actions

    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          username: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}

